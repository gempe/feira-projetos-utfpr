{"version":3,"sources":["serviceWorker.js","shared/styles.js","containers/Home/index.js","containers/Home/Home.js","containers/Challenge/styles.js","containers/Challenge/index.js","containers/Challenge/Challenge.js","routes.js","App.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","unregister","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","Container","styled","div","_templateObject","media","lessThan","_templateObject2","H1","h1","_templateObject3","_templateObject4","_templateObject5","H2","h2","_templateObject6","_templateObject7","_templateObject8","Shine","span","_templateObject9","Button","button","_templateObject10","props","width","display","_templateObject11","Flex","_templateObject12","direction","Home","react_default","a","createElement","react_router_dom","to","type","Text","styles_templateObject","Input","input","styles_templateObject2","styles_templateObject3","Challenge","styles_templateObject4","placeholder","disabled","Routes","react_router","exact","path","component","App","routes","r","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","_serviceWorker__WEBPACK_IMPORTED_MODULE_4__","ReactDOM","render","document","getElementById"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAYoBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA0GC,SAASL,IACV,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaV,29EC5HZ,IAAMW,EAAYC,IAAOC,IAAVC,IAUlBC,IAAMC,SAAS,SAAfD,CAVkBE,MAeTC,EAAKN,IAAOO,GAAVC,IAIXL,IAAMC,SAAS,SAAfD,CAJWM,KASXN,IAAMC,SAAS,QAAfD,CATWO,MAcFC,EAAKX,IAAOY,GAAVC,IAIXV,IAAMC,SAAS,SAAfD,CAJWW,KASXX,IAAMC,SAAS,QAAfD,CATWY,MAeFC,EAAQhB,IAAOiB,KAAVC,KAOLC,EAASnB,IAAOoB,OAAVC,IAGR,SAAAC,GAAK,OAAKA,EAAMC,MAAQD,EAAMC,MAAQ,SAKpC,SAAAD,GAAK,OAAKA,EAAME,QAAUF,EAAME,QAAU,gBAmBnDrB,IAAMC,SAAS,QAAfD,CA3BesB,IA6BN,SAAAH,GAAK,OAAKA,EAAMC,MAAQD,EAAMC,MAAQ,WAItCG,EAAO1B,IAAOC,IAAV0B,IAEG,SAAAL,GAAK,OAAKA,EAAMM,UAAYN,EAAMM,UAAY,WCvFnDC,ECOF,kBACXC,EAAAC,EAAAC,cAACjC,EAAD,KACE+B,EAAAC,EAAAC,cAAC1B,EAAD,wBACAwB,EAAAC,EAAAC,cAACrB,EAAD,sCAEEmB,EAAAC,EAAAC,cAAChB,EAAD,mCAEFc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,YACPJ,EAAAC,EAAAC,cAACb,EAAD,CAAQgB,KAAK,UAAb,ulBCdC,IAAMC,EAAOpC,IAAOiB,KAAVoB,KAKJC,EAAQtC,IAAOuC,MAAVC,IAUdrC,IAAMC,SAAS,QAAfD,CAVcsC,MCNHC,GDqBQ1C,IAAOC,IAAV0C,KEhBF,kBAChBb,EAAAC,EAAAC,cAACjC,EAAD,KACE+B,EAAAC,EAAAC,cAACrB,EAAD,iDAEEmB,EAAAC,EAAAC,cAACI,EAAD,0BAEFN,EAAAC,EAAAC,cAACN,EAAD,KACEI,EAAAC,EAAAC,cAACM,EAAD,CAAOH,KAAK,OAAOS,YAAY,aAC/Bd,EAAAC,EAAAC,cAACM,EAAD,CAAOH,KAAK,OAAOS,YAAY,YAAYC,UAAQ,IACnDf,EAAAC,EAAAC,cAACb,EAAD,CAAQK,QAAQ,OAAOD,MAAM,QAA7B,cCASuB,EATA,kBACbhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,IACjCC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWR,OCL/BS,IAFH,kBAAMrB,EAAAC,EAAAC,cAACoB,EAAD,4ECJlBnE,EAAAoE,EAAAlE,GAAA,SAAAmE,GAAA,IAAAC,EAAAtE,EAAA,GAAAuE,EAAAvE,EAAAwE,EAAAF,GAAAG,EAAAzE,EAAA,IAAA0E,EAAA1E,EAAAwE,EAAAC,GAAAE,GAAA3E,EAAA,IAAAA,EAAA,KAAA4E,EAAA5E,EAAA,IAOA6E,IAASC,OAAOP,EAAAzB,EAAAC,cAAC4B,EAAA,EAAD,MAASN,EAAOU,SAASC,eAAe,SAKxDtE","file":"static/js/main.7118a531.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from 'styled-components';\nimport media from 'styled-media-query';\n\nexport const Container = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 20px;\n  text-align: center;\n\n  ${media.lessThan('medium')`\n    padding: 15px;\n  `};\n`;\n\nexport const H1 = styled.h1`\n  color: #1565c0;\n  font-size: 3.5em;\n\n  ${media.lessThan('medium')`\n    text-align:center;\n    font-size: 3em;\n  `};\n\n  ${media.lessThan('small')`\n    font-size: 2em;\n  `};\n`;\n\nexport const H2 = styled.h2`\n  color: #fff;\n  font-size: 2.5em;\n\n  ${media.lessThan('medium')`\n    text-align:center;\n    font-size: 2em;\n  `};\n\n  ${media.lessThan('small')`\n    font-size: 1.3em;\n    text-align: center;\n  `};\n`;\n\nexport const Shine = styled.span`\n  &:hover {\n    text-shadow: 0px 0px 6px rgba(255, 255, 255, 1);\n    transition: all 0.8s ease 0s;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #1565c0;\n  border: 0px;\n  width: ${props => (props.width ? props.width : '200px')};\n  min-height: 35px;\n  color: #fff;\n  font-size: 2em;\n  border-radius: 4px;\n  display: ${props => (props.display ? props.display : 'inline-block')};\n  padding: 5px 40px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  cursor: pointer;\n\n  &:hover {\n    background: #434343;\n    letter-spacing: 1px;\n    -webkit-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);\n    -moz-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);\n    box-shadow: 5px 40px -10px rgba(0, 0, 0, 0.57);\n    transition: all 0.4s ease 0s;\n\n    text-shadow: 0px 0px 10px rgba(255, 255, 255, 1);\n    -webkit-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);\n    -moz-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);\n    transition: all 0.4s ease 0s;\n  }\n\n  ${media.lessThan('small')`\n    font-size: 1.4em;\n    width: ${props => (props.width ? props.width : '150px')};\n  `};\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.direction ? props.direction : 'column')};\n  justify-content: center;\n  align-items: center;\n  min-height: 100%;\n`;\n","import Home from './Home';\n\nexport default Home;\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Container, H1, H2, Button, Shine,\n} from '../../shared/styles';\n\nconst Home = () => (\n  <Container>\n    <H1>Curte desafios?</H1>\n    <H2>\n      Mostre que você é um Dev\n      <Shine>🔪💀.</Shine>\n    </H2>\n    <Link to=\"/desafio\">\n      <Button type=\"button\">Iniciar</Button>\n    </Link>\n  </Container>\n);\n\nexport default Home;\n","import styled from 'styled-components';\nimport media from 'styled-media-query';\n\nexport const Text = styled.span`\n  font-size: 0.85em;\n  color: #1565c0;\n`;\n\nexport const Input = styled.input`\n  border-style: none;\n  border-bottom: 2px solid #1565c0;\n  background: transparent;\n  outline: none;\n  font-size: 1.8em;\n  color: #fff;\n  padding: 0 10px;\n  margin: 25px 10px;\n\n  ${media.lessThan('small')`\n    font-size: 1.3em;\n  `};\n`;\n\nexport const Content = styled.div`\n  padding: 0 8%;\n  min-height: 100vh;\n`;\n","import Challenge from './Challenge';\n\nexport default Challenge;\n","import React from 'react';\n\nimport { Text, Input } from './styles';\nimport {\n  H2, Flex, Button, Container,\n} from '../../shared/styles';\n\nconst Challenge = () => (\n  <Container>\n    <H2>\n      Basta preencher e enviar o formulário,\n      <Text> se for capaz...</Text>\n    </H2>\n    <Flex>\n      <Input type=\"text\" placeholder=\"Seu Nome\" />\n      <Input type=\"text\" placeholder=\"Seu Email\" disabled />\n      <Button display=\"none\" width=\"100%\">\n        Enviar\n      </Button>\n    </Flex>\n  </Container>\n);\n\nexport default Challenge;\n","import React from 'react';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Challenge from './containers/Challenge';\n\nconst Routes = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/desafio\" component={Challenge} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './routes';\n\nconst App = () => <Routes />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, global.document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}